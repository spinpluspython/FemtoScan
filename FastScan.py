# -*- coding: utf-8 -*-
"""

@author: Steinn Ymir Agustsson

    Copyright (C) 2018 Steinn Ymir Agustsson

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

"""
#
# import nidaqmx
# import numpy as np
# import pyqtgraph as pg
# from PyQt5.QtCore import QCoreApplication, QTimer
# from PyQt5.QtWidgets import QMainWindow, QApplication, QWidget, QGridLayout, QHBoxLayout, QVBoxLayout, QPushButton, \
#     QGroupBox
# from nidaqmx.constants import Edge, AcquisitionType

import logging
import sys
from logging.config import fileConfig

from PyQt5.QtCore import QCoreApplication
from PyQt5.QtWidgets import QApplication

from gui.fastscan.mainwindow import FastScanMainWindow


def main():
    from utilities.qt import my_exception_hook
    # used to see errors generated by PyQt5 in pycharm:
    sys._excepthook = sys.excepthook
    # Set the exception hook to our wrapping function
    sys.excepthook = my_exception_hook

    # create main logger
    fileConfig('./cfg/logging_config.ini')
    logger = logging.getLogger(__name__)
    logger.setLevel(logging.DEBUG)
    logger.debug('Started logger')

    app = QCoreApplication.instance()

    if app is None:
        app = QApplication(sys.argv)
    # Create handle prg for the Graphic Interface
    prg = FastScanMainWindow()

    # print('showing GUI')
    prg.show()

    try:
        app.exec_()
    except:
        print('exiting')


if __name__ == '__main__':
    main()
