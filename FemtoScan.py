# -*- coding: utf-8 -*-
"""

@author: Steinn Ymir Agustsson
"""
import sys
from PyQt5 import QtWidgets, QtCore, uic


from gui.widgets import FemtoScanMainWindow

_RECOMPILE = True

def main():

    app = QtCore.QCoreApplication.instance()
    if app is None:
        app = QtWidgets.QApplication(sys.argv)
    # Create handle prg for the Graphic Interface

    prg = FemtoScanMainWindow()

    print('showing GUI')
    prg.show()

    try:
        app.exec_()
    except:
        print('app.exec_() failed: exiting')


def my_exception_hook(exctype, value, traceback):
    # Print the error and traceback
    print(exctype, value, traceback)
    # Call the normal Exception hook after
    sys._excepthook(exctype, value, traceback)
    sys.exit(1)

def recompile(folder):
    print('recompiling')
    uic.compileUiDir(folder, execute=True)
    print('done')





if __name__ == '__main__':
    # used to see errors generated by PyQt5 in pycharm:
    sys._excepthook = sys.excepthook
    # Set the exception hook to our wrapping function
    sys.excepthook = my_exception_hook

    if _RECOMPILE:
        recompile('the/right/folder/whit/ui_stuff.ui')
    main()